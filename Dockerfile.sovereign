# Sovereign Backend Build
FROM node:20-alpine AS builder

RUN apk add --no-cache python3 make g++ git

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY src ./src
COPY proto ./proto
COPY scripts ./scripts

# Build TypeScript
RUN npm run build

# Production stage
FROM node:20-alpine

RUN apk add --no-cache tini curl

WORKDIR /app

# Copy built application
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/proto ./proto

# Copy config files
COPY snet-config.json ./
COPY daemon-config.json ./

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S oracle -u 1001
USER oracle

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Expose ports
EXPOSE 8080
EXPOSE 7000

# Use tini for signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start with sovereign mode
CMD ["node", "dist/server.js", "--sovereign"]