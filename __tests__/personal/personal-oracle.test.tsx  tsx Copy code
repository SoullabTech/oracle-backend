import { render, screen, fireEvent } from '@testing-library/react';
import PersonalOraclePage from '@/pages/personal-oracle';
import { useSession } from '@/hooks/useSession';
import { usePersonalOracle } from '@/lib/hooks/usePersonalOracle';

jest.mock('@/hooks/useSession', () => ({
  useSession: jest.fn(),
}));

jest.mock('@/lib/hooks/usePersonalOracle', () => ({
  usePersonalOracle: jest.fn(),
}));

describe('PersonalOraclePage', () => {
  it('renders loading and triggers fetchOracle', () => {
    (useSession as jest.Mock).mockReturnValue({
      session: { user: { id: 'demo-user-1', user_metadata: { name: 'Seeker' } } },
      loading: false,
    });

    const fetchOracle = jest.fn();

    (usePersonalOracle as jest.Mock).mockReturnValue({
      oracleData: null,
      fetchOracle,
      loading: false,
    });

    render(<PersonalOraclePage />);
    fireEvent.click(screen.getByText('ðŸ”® Invoke Oracle'));
    expect(fetchOracle).toHaveBeenCalled();
  });
});
